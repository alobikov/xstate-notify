{"version":3,"sources":["constants/apikeys.js","services/parse.js","components/state/index.js","components/home/state/index.js","components/home/HomeBar.js","components/home/sender/SenderSemui.jsx","components/home/contacts/ContactsSemui.jsx","components/home/messenger/Inbox.jsx","components/home/messenger/Outbox.jsx","components/home/messenger/MessengerTabs.jsx","components/home/Home.jsx","components/shared/LinearIndeterminate.js","components/login/SignUp.jsx","components/login/login.js","components/privateroute/index.js","components/app/App.js","components/app/App1.js","serviceWorker.js","index.js","components/assets/drip-echo.wav","components/assets/logo-bohnenkamp.svg"],"names":["keys","MASTER_KEY","APP_ID","JS_KEY","Parse","require","userSignUpAsync","a","username","email","password","toCamelCase","str","split","map","word","charAt","toUpperCase","slice","join","User","current","logOut","user","set","console","log","undefined","logIn","result","signUp","toJSON","createSelfUser","objectId","get","readMessages","Messages","Object","extend","query","Query","equalTo","find","results","length","msg","id","from","timestamp","body","title","readOutbox","to","filter","includes","addMessageTitle","then","object","trim","save","response","error","createMessage","message","d","Date","datestring","getFullYear","getMonth","getDate","getHours","getMinutes","dir","queryCollection","collection","column","searchItem","Collection","getAddressees","data","deleteMessage","destroy","Users","MachineContext","React","createContext","doLogin","context","event","Promise","resolve","setTimeout","appMachine","Machine","initial","isLoading","states","init","entry","serverURL","initialize","on","auth","idle","LOGIN","SIGNUP","started","invoke","src","onDone","target","actions","assign","onError","_","success","fail","home","homeidle","HomeMachineContext","ctx","getAddresseesParse","getMessages","readMessagesParse","getOutbox","readOutboxParse","deleteInboxItem","deleteMessageParse","payload","messages","deleteOutboxMessage","addMessageTitleParse","outbox","markMessage","dispatchMessage","createMessageParse","homeMachine","msgInForm","allContacts","addressees","clearBtnDis","msgLoading","outboxLoading","ready","type","sender","addrFieldEmpty","ADD_ADDRESSEE","addrFillStarted","cond","DEL_ADDRESSEE","addrFillCompleted","sendingMessage","CLEAR_MESSAGE","SEND_MESSAGE","MESSAGE_DATA","ADDR_COMPLETE","messenger","inbox","DEL_INBOX_ITEM","MARK_MESSAGE_READ","DEL_OUTBOX_MESSAGE","chat","deletingInboxItem","deletingOutboxMessage","markingMessage","SWITCH_TO_OUTBOX","SWITCH_TO_INBOX","SWITCH_TO_CHAT","guards","addrLimit","addrEmpty","duplicatedAddr","delAddressee","addressee","addAddressee","sendMessage","clearMessage","receiveTyping","HomeBar","Menu","style","height","attached","color","inverted","Dropdown","item","icon","Header","as","paddingTop","fontSize","margin","content","SenderSemui","styles","adr_btn","padding","borderRadius","marginLeft","fontWeight","useContext","send","handleDelete","handleClear","value","Segment","basic","textAlign","Button","onClick","bind","key","size","Icon","name","Form","TextArea","rows","placeholder","onChange","display","justifyContent","active","className","disabled","ContactsSemui","contacts","paddingRight","maxHeight","paddingLeft","width","List","animated","divided","relaxed","contact","ListItem","Item","Content","Inbox","useSound","dripSfx","flexContainer","flexFlow","flexConCol","flex","time","buttons","divider","borderLeft","marginRight","Checkbox","onMouseEnter","e","onMouseOut","Outbox","MessengerTabs","cntNewMessages","reduce","acc","selectSwitch","panes","menuItem","render","Tab","Pane","onTabChange","activeIndex","menu","secondary","pointing","Home","machineWithContext","withContext","useMachine","devTools","Provider","Fragment","useStyles","makeStyles","theme","root","LinearIndeterminate","classes","LinearProgress","paper","marginTop","spacing","flexDirection","alignItems","avatar","backgroundColor","palette","main","form","submit","indicatorStyle","marginBottom","SignUp","useState","sessionToken","signupError","values","setValues","setLoading","isSignin","setSignin","showPassword","setShowPassword","usernameError","emailError","passwordError","errors","setErrors","machine","sendToMachine","some","matches","LoadingOrError","props","toggleMode","handleChange","prop","validateUsername","validateEmail","validatePassword","useHistory","Container","component","maxWidth","CssBaseline","logo","alt","Typography","variant","onSubmit","preventDefault","noValidate","Grid","container","xs","FormControl","fullWidth","clsx","textField","InputLabel","htmlFor","OutlinedInput","labelWidth","FormHelperText","focused","isEmailFocus","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","toString","justify","Link","href","Login","userRef","useRef","passRef","ref","PrivateRoute","children","rest","location","pathname","state","App","currentMachine","path","App1","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.66e1ddf9.chunk.js","sourcesContent":["const keys = {\r\n    MASTER_KEY : 'lTkaAkYe0jKDFfFEpdWZmgs8jqQwBqwlQyDjKPBS',\r\n    APP_ID :'iCYTGvNAatQe64smIVqoOidyKKoPx4N0qq3zdH2o',\r\n    JS_KEY :'hFVZ6Krhye8JsgfNw5LE6VejsUQka8Pd91eYt01L'\r\n}\r\nexport default keys","import keys from \"../constants/apikeys\";\r\nconst Parse = require(\"parse\");\r\n\r\nexport function parseInit() {\r\n  console.log(\"parseInit() APP_ID: \" + keys.APP_ID);\r\n  Parse.serverURL = \"https://notifyme.back4app.io\"; // This is your Server URL\r\n  Parse.initialize(keys.APP_ID, keys.JS_KEY);\r\n}\r\n\r\n// parse response\r\n// {\"username\":\"test\",\"email\":\"example@google.com\",\"name\":\"web_user\",\r\n// \"confirmPassword\":\"qwerty\",\"RunCount\":1,\"createdAt\":\"2020-04-30T11:06:44.869Z\",\r\n// \"sessionToken\":\"r:b8447633f8bf4348d611eadd442b7a6e\",\r\n// \"updatedAt\":\"2020-04-30T11:06:44.869Z\",\"objectId\":\"dNvDWX46ws\"}\r\nexport function userSignUp({ username, email, password }, callback) {\r\n  const user = new Parse.User();\r\n  user.set(\"email\", email);\r\n  user.set(\"name\", \"web_user\");\r\n  user.set(\"confirmPassword\", password);\r\n  user.set(\"RunCount\", 1);\r\n  user.set(\"password\", password);\r\n\r\n  if (username === null) {\r\n    console.log(\"parse userSignUp() signIn tread\");\r\n    user\r\n      .signIn()\r\n      .then((user) => {\r\n        callback(user.toJSON());\r\n        console.log(\"User logged in: \", user.get(\"sessionToken\"));\r\n      })\r\n      .catch((error) => {\r\n        callback(error.message);\r\n      });\r\n  } else {\r\n    console.log(\"parse userSignUp() signUp tread\");\r\n    user.set(\"username\", username);\r\n    user\r\n      .signUp()\r\n      .then((user) => {\r\n        callback(user.toJSON());\r\n        console.log(\"User Signed up: \", user.get(\"sessionToken\"));\r\n      })\r\n      .catch((error) => {\r\n        callback(error.message);\r\n      });\r\n  }\r\n}\r\n\r\nexport async function userSignUpAsync({ username, email, password }) {\r\n  const toCamelCase = (str) =>\r\n    str\r\n      .split(/\\s*[\\s,]\\s*/)\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n  var currentUser = Parse.User.current();\r\n  if (currentUser) {\r\n    // do stuff with the user\r\n    Parse.User.logOut();\r\n  }\r\n  const user = new Parse.User();\r\n  user.set(\"name\", \"web_user\");\r\n  user.set(\"password\", password);\r\n  let result;\r\n  console.log(\"userSignUpAsync\");\r\n  console.log({ username, email, password });\r\n  if (username === undefined) {\r\n    user.set(\"username\", email);\r\n    console.log(\"parse userSignUp() signIn tread\");\r\n    result = await user.logIn();\r\n  } else {\r\n    console.log(\"parse userSignUp() signUp tread\");\r\n    user.set(\"username\", toCamelCase(username));\r\n    user.set(\"email\", email);\r\n    console.log(\"before signUp seesion Token: \");\r\n    result = await user.signUp();\r\n    result = result.toJSON();\r\n    await createSelfUser(toCamelCase(username), result.objectId);\r\n  }\r\n  console.log(result.get(\"sessionToken\"));\r\n  result = result.toJSON();\r\n  return result;\r\n}\r\n/// reads all inbox messages from Messsages for given user\r\nexport async function readMessages(username) {\r\n  const Messages = Parse.Object.extend(\"Messages\");\r\n  const query = new Parse.Query(Messages);\r\n  query.equalTo(\"to\", username);\r\n  const results = await query.find();\r\n  console.log(results.length + \" messages\");\r\n  console.log(results[0]);\r\n  // convert returned Parse.Object values to array of Messages\r\n  return results.map((msg) => ({\r\n    objectId: msg.id,\r\n    from: msg.get(\"from\"),\r\n    timestamp: msg.get(\"timestamp\"),\r\n    body: msg.get(\"body\"),\r\n    title: msg.get(\"title\"),\r\n  }));\r\n}\r\n/// reads all outbox messages from Messsages for given user\r\nexport async function readOutbox(username) {\r\n  const Messages = Parse.Object.extend(\"Messages\");\r\n  const query = new Parse.Query(Messages);\r\n  query.equalTo(\"from\", username);\r\n  const results = await query.find();\r\n  console.log(results.length + \" messages\");\r\n  console.log(results[0]);\r\n  // convert returned Parse.Object values to array of Messages\r\n  return results\r\n    .map((msg) => ({\r\n      objectId: msg.id,\r\n      to: msg.get(\"to\"),\r\n      timestamp: msg.get(\"timestamp\"),\r\n      body: msg.get(\"body\"),\r\n      title: msg.get(\"title\"),\r\n    }))\r\n    .filter((msg) => !msg.title?.includes(\"DEL\"));\r\n}\r\n/// updates message title im Meessages collection\r\nexport async function setMessageTitle(objectId, title) {\r\n  const Messages = Parse.Object.extend(\"Messages\");\r\n  const message = new Parse.Query(Messages);\r\n  message.get(objectId).then((object) => {\r\n    object.set(\"title\", title.trim());\r\n    object.save().then(\r\n      (response) => {\r\n        return null;\r\n      },\r\n      (error) => {\r\n        return \"Error while updating \" + error;\r\n      }\r\n    );\r\n  });\r\n}\r\n/// add new key to message title im Meessages collection\r\nexport async function addMessageTitle(objectId, title) {\r\n  const Messages = Parse.Object.extend(\"Messages\");\r\n  const message = new Parse.Query(Messages);\r\n  message.get(objectId).then((object) => {\r\n    object.set(\"title\", `${object.get(\"title\") || \"\"} ${title.trim()}`);\r\n    object.save().then(\r\n      (response) => {\r\n        return null;\r\n      },\r\n      (error) => {\r\n        return \"Error while updating \" + error;\r\n      }\r\n    );\r\n  });\r\n}\r\n/// creates new message in Messages on server\r\n/// timestamp added in this function\r\n/// return objectId of created meddage\r\nexport async function createMessage(from, to, body) {\r\n  const Messages = Parse.Object.extend(\"Messages\");\r\n  const message = new Messages();\r\n  const d = new Date();\r\n  const datestring =\r\n    d.getFullYear() +\r\n    \"-\" +\r\n    (\"0\" + (d.getMonth() + 1)).slice(-2) +\r\n    \"-\" +\r\n    (\"0\" + d.getDate()).slice(-2) +\r\n    \" \" +\r\n    (\"0\" + d.getHours()).slice(-2) +\r\n    \":\" +\r\n    (\"0\" + d.getMinutes()).slice(-2);\r\n  message.set(\"from\", from);\r\n  message.set(\"body\", body);\r\n  message.set(\"to\", to);\r\n  message.set(\"timestamp\", datestring);\r\n  const result = await message.save();\r\n  console.log(\"yyyyyyyyyyyyyyyyyyyy\");\r\n  console.dir(result);\r\n  return {\r\n    objectId: result.id,\r\n    body: result.get(\"body\"),\r\n    from: result.get(\"from\"),\r\n    to: result.get(\"to\"),\r\n    timestamp: result.get(\"timestamp\"),\r\n  };\r\n}\r\n/// queries collection for searchItem in column\r\n/// returns null if nothing found or array\r\nexport async function queryCollection({ collection, column, searchItem }) {\r\n  const Collection = Parse.Object.extend(collection);\r\n  const query = new Parse.Query(Collection);\r\n  !searchItem ? query.find() : query.equalTo(column, searchItem);\r\n  const results = await query.find();\r\n  if (results.length === 0) return null;\r\n  return results;\r\n}\r\n/// queries Users collection for all usernames\r\n/// returns array of object {username: 'Jhon Doe' objectId: 'aasdsdd', ...}\r\n///\r\nexport async function getAddressees() {\r\n  const result = await queryCollection({ collection: \"Users\" });\r\n  return result.map((data) => ({\r\n    username: data.get(\"username\"),\r\n    objectId: data.id,\r\n  }));\r\n}\r\nexport async function deleteMessage(objectId) {\r\n  const Messages = Parse.Object.extend(\"Messages\");\r\n  const query = new Parse.Query(Messages);\r\n  const object = await query.get(objectId);\r\n  const response = await object.destroy();\r\n  return response;\r\n}\r\n/// creates user record in Users collection\r\nasync function createSelfUser(username, objectId) {\r\n  // first, check if user is already in Users collection\r\n  const result = await queryCollection({\r\n    collection: \"Users\",\r\n    column: \"username\",\r\n    searchItem: username,\r\n  });\r\n  if (result === null) {\r\n    // there is no user record in Users, so create one\r\n    console.log(\"Creating new Users record\");\r\n    const Users = Parse.Object.extend(\"Users\");\r\n    const user = new Users();\r\n    user.set(\"username\", username);\r\n    user.set(\"userObjId\", objectId);\r\n    user.set(\"deviceId\", \"web\");\r\n    user.save().then(\r\n      (user) => {\r\n        // Execute any logic that should take place after the object is saved.\r\n        console.log(\"New object created with objectId: \" + user.id);\r\n      },\r\n      (error) => {\r\n        // Execute any logic that should take place if the save fails.\r\n        // error is a Parse.Error with an error code and message.\r\n        console.log(\r\n          \"Failed to create new object, with error code: \" + error.message\r\n        );\r\n      }\r\n    );\r\n  } else if (result > 1)\r\n    console.log(\"!!! the mess detected in Users collection !!!\");\r\n}\r\n","import { assign, Machine } from \"xstate\";\r\nimport React from \"react\";\r\nimport SelectInput from \"@material-ui/core/Select/SelectInput\";\r\nimport { parseInit, userSignUpAsync } from \"../../services/parse\";\r\nimport { readMessages as readMessagesParse } from \"../../services/parse\";\r\n\r\nexport const MachineContext = React.createContext();\r\n\r\nconst initParse = () => {\r\n  parseInit();\r\n};\r\n\r\nconst doLogin = async (context, event) => {\r\n  console.log(\"doLogin() invoked\");\r\n  console.log(event);\r\n  await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n  // if (username !== \"hello\") {\r\n  //   console.log(\"doLogin(): error\");\r\n  //   throw new Error(\"Wrong user name\");\r\n  // } else if (username === null) console.log(\"This is signIn\");\r\n  // else console.log(\"This is signUp\");\r\n  // return { username, email, password };\r\n  const { objectId, username, email } = await userSignUpAsync(event);\r\n  return {\r\n    username,\r\n    email,\r\n    objectId,\r\n  };\r\n};\r\n\r\nconst appMachine = Machine({\r\n  id: \"app\",\r\n  initial: \"init\",\r\n  // context hosts meta data\r\n  context: {\r\n    user: undefined,\r\n    error: undefined,\r\n    isLoading: false,\r\n  },\r\n  states: {\r\n    init: {\r\n      entry: initParse,\r\n      on: { \"\": \"auth\" },\r\n    },\r\n    auth: {\r\n      id: \"auth\",\r\n      initial: \"idle\",\r\n      states: {\r\n        idle: {\r\n          on: {\r\n            LOGIN: \"started\",\r\n            SIGNUP: \"started\",\r\n          },\r\n        },\r\n        started: {\r\n          entry: (context, event) => console.log(\"auth.started.entry\"),\r\n          invoke: {\r\n            id: \"doLogin\",\r\n            src: doLogin, // async function e.g. parse server fetch\r\n            onDone: {\r\n              target: \"success\",\r\n              actions: assign({ user: (context, event) => event.data }),\r\n            },\r\n            onError: {\r\n              target: \"fail\",\r\n              actions: assign({ error: (_, event) => event.data }),\r\n            },\r\n          },\r\n        },\r\n        success: {\r\n          on: { \"\": \"home\" },\r\n        },\r\n        fail: {\r\n          on: {},\r\n        },\r\n        home: {\r\n          id: \"home\",\r\n          initial: \"homeidle\",\r\n          states: {\r\n            homeidle: {},\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default appMachine;\r\n","import React from \"react\";\r\nimport { Machine, assign, send } from \"xstate\";\r\n\r\nimport {\r\n  readMessages as readMessagesParse,\r\n  getAddressees as getAddresseesParse,\r\n  deleteMessage as deleteMessageParse,\r\n  createMessage as createMessageParse,\r\n  readOutbox as readOutboxParse,\r\n  addMessageTitle as addMessageTitleParse,\r\n} from \"../../../services/parse\";\r\n\r\nexport const HomeMachineContext = React.createContext();\r\nconst readMessages = async (ctx, event) => {\r\n  console.log(\"readMessages()\");\r\n  console.log(ctx.user.username);\r\n  return await readMessagesParse(ctx.user.username);\r\n};\r\nconst getAddressees = async (ctx, event) => {\r\n  await new Promise((resolve) => setTimeout(resolve, 1));\r\n  return await getAddresseesParse();\r\n};\r\nconst getMessages = async (ctx, event) => {\r\n  return await readMessagesParse(ctx.user.username);\r\n};\r\nconst getOutbox = async (ctx, event) => {\r\n  return await readOutboxParse(ctx.user.username);\r\n};\r\nconst deleteInboxItem = async (ctx, event) => {\r\n  await deleteMessageParse(event.payload);\r\n  return ctx.messages.filter(({ objectId }) => objectId !== event.payload);\r\n};\r\n\r\nconst deleteOutboxMessage = async (ctx, event) => {\r\n  // first set title of the message on server to 'DEL'\r\n  await addMessageTitleParse(event.payload, \"DEL\");\r\n  // second remove message from context.outbox array\r\n  return ctx.outbox.filter(({ objectId }) => objectId !== event.payload);\r\n};\r\n\r\nconst markMessage = async (ctx, event) => {\r\n  // first set title of the message on server to 'READ'\r\n  await addMessageTitleParse(event.payload, \"READ\");\r\n  // second update title of the message in local messages array\r\n  return ctx.messages.map((message) => {\r\n    if (message.objectId !== event.payload) return message;\r\n    console.log(\"changing title\");\r\n    return { ...message, title: ((message.title || \"\") + \" READ\").trim() };\r\n  });\r\n};\r\n\r\nconst dispatchMessage = async (ctx, event) => {\r\n  const to = event.payload.to[0]; //TODO; now it is sending this message to first addressee\r\n  const message = await createMessageParse(\r\n    ctx.user.username,\r\n    to,\r\n    event.payload.body\r\n  );\r\n  // now update inbox if message sent to itself\r\n  if (to === ctx.user.username) {\r\n    ctx.messages = [message, ...ctx.messages];\r\n\r\n  }\r\n  // and finally update outbox\r\n  ctx.outbox = [message, ...ctx.outbox];\r\n};\r\n\r\nexport const homeMachine = Machine(\r\n  {\r\n    // machine is instantiated .withContext({user}), so all other context demolished\r\n    // use entry:  to set initial values\r\n    id: \"home\",\r\n    initial: \"idle\",\r\n    context: {\r\n      user: {},\r\n      msgInForm: \"\",\r\n      messages: [],\r\n      outbox: [],\r\n      allContacts: [],\r\n      addressees: [],\r\n      clearBtnDis: true,\r\n    },\r\n    states: {\r\n      idle: {\r\n        entry: [\r\n          assign({\r\n            messages: [\r\n              {\r\n                from: \"Pavel Troller\",\r\n                body: \"initially assigned message\",\r\n                objectId: \"1\",\r\n                timestamp: \"10 mins ago\",\r\n                title: \"DEL READ\",\r\n              },\r\n            ],\r\n            msgInForm: \"\",\r\n            outbox: [],\r\n            allContacts: [],\r\n            addressees: [],\r\n            clearBtnDis: true,\r\n          }),\r\n        ],\r\n        invoke: {\r\n          id: \"getAddressees\",\r\n          src: getAddressees,\r\n          onDone: {\r\n            target: \"msgLoading\",\r\n            actions: assign({ allContacts: (context, event) => event.data }),\r\n          },\r\n          onError: {\r\n            target: \"msgLoading\",\r\n            actions: assign({\r\n              error: (context, event) => \"there is problem fetching contacts\",\r\n            }),\r\n          },\r\n        },\r\n      },\r\n      // msgReadingStarted: {\r\n      //   invoke: {\r\n      //     id: \"readMessages\",\r\n      //     src: readMessages,\r\n      //     onDone: {\r\n      //       target: \"success\",\r\n      //       actions: assign({\r\n      //         messages: (ctx, event) => {\r\n      //           console.log(event.data);\r\n      //           return event.data;\r\n      //         },\r\n      //       }),\r\n      //     },\r\n      //     onError: {\r\n      //       target: \"fail\",\r\n      //       actions: assign({\r\n      //         error: (_, event) => {\r\n      //           console.log(event.data);\r\n      //           return event.data;\r\n      //         },\r\n      //       }),\r\n      //     },\r\n      //   },\r\n      // }, //TODO redundant - subject to remove with some child fucntions\r\n      msgLoading: {\r\n        invoke: {\r\n          id: \"getMessages\",\r\n          src: getMessages,\r\n          onDone: {\r\n            target: \"outboxLoading\",\r\n            actions: assign({ messages: (context, event) => event.data }),\r\n          },\r\n          onError: {\r\n            target: \"outboxLoading\",\r\n            actions: assign({\r\n              error: (context, event) => \"there is problem fetching messages\",\r\n            }),\r\n          },\r\n        },\r\n      },\r\n      outboxLoading: {\r\n        invoke: {\r\n          id: \"getOutbox\",\r\n          src: getOutbox,\r\n          onDone: {\r\n            target: \"ready\",\r\n            actions: assign({\r\n              outbox: (ctx, event) => {\r\n                console.log(event.data);\r\n                return event.data;\r\n              },\r\n            }),\r\n          },\r\n          onError: {\r\n            target: \"ready\",\r\n            actions: assign({\r\n              error: (context, event) => \"there is problem fetching messages\",\r\n            }),\r\n          },\r\n        },\r\n      },\r\n      ready: {\r\n        id: \"ready\",\r\n        type: \"parallel\",\r\n        states: {\r\n          sender: {\r\n            id: \"sender\",\r\n            initial: \"addrFieldEmpty\",\r\n            states: {\r\n              addrFieldEmpty: {\r\n                entry: assign({ clearBtnDis: true }),\r\n                on: {\r\n                  ADD_ADDRESSEE: {\r\n                    target: \"addrFillStarted\",\r\n                    actions: \"addAddressee\",\r\n                  },\r\n                },\r\n              },\r\n              addrFillStarted: {\r\n                entry: assign({ clearBtnDis: false }),\r\n                on: {\r\n                  \"\": [\r\n                    {\r\n                      target: \"addrFillCompleted\",\r\n                      cond: \"addrLimit\",\r\n                    },\r\n                  ],\r\n                  DEL_ADDRESSEE: [\r\n                    {\r\n                      target: \"addrFieldEmpty\",\r\n                      cond: \"addrEmpty\",\r\n                      actions: [\"delAddressee\"],\r\n                    },\r\n                    {\r\n                      actions: [\"delAddressee\"],\r\n                    },\r\n                  ],\r\n                  ADD_ADDRESSEE: [\r\n                    { target: \"addrFillStarted\", cond: \"duplicatedAddr\" },\r\n                    { actions: \"addAddressee\" },\r\n                  ],\r\n                },\r\n              },\r\n              addrFillCompleted: {\r\n                on: {\r\n                  DEL_ADDRESSEE: {\r\n                    target: \"addrFillStarted\",\r\n                    actions: [\"delAddressee\"],\r\n                  },\r\n                },\r\n              },\r\n              sendingMessage: {\r\n                invoke: {\r\n                  id: \"dispatchMessage\",\r\n                  src: dispatchMessage,\r\n                  onDone: {\r\n                    target: \"addrFieldEmpty\",\r\n                    actions: \"clearMessage\", // assign({ messages: (context, event) => event.data }),\r\n                  },\r\n                  onError: {\r\n                    target: \"addrFieldEmpty\",\r\n                    actions: assign({\r\n                      error: (context, event) =>\r\n                        \"there is problem sending message\",\r\n                    }),\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            on: {\r\n              CLEAR_MESSAGE: {\r\n                target: \".addrFieldEmpty\",\r\n                actions: [\"clearMessage\"],\r\n              },\r\n              SEND_MESSAGE: {\r\n                target: \".sendingMessage\",\r\n                actions: [\"clearMessage\"],\r\n              },\r\n              MESSAGE_DATA: { actions: \"receiveTyping\" },\r\n              ADDR_COMPLETE: \".addrFillCompleted\",\r\n            },\r\n          },\r\n          messenger: {\r\n            id: \"messenger\",\r\n            initial: \"inbox\",\r\n            states: {\r\n              inbox: {\r\n                on: {\r\n                  DEL_INBOX_ITEM: \"deletingInboxItem\",\r\n                  MARK_MESSAGE_READ: \"markingMessage\",\r\n                },\r\n              },\r\n              outbox: {\r\n                on: { DEL_OUTBOX_MESSAGE: \"deletingOutboxMessage\" },\r\n              },\r\n              chat: {},\r\n\r\n              deletingInboxItem: {\r\n                invoke: {\r\n                  id: \"deleteInboxItem\",\r\n                  src: deleteInboxItem,\r\n                  onDone: {\r\n                    target: \"inbox\",\r\n                    actions: assign({\r\n                      messages: (context, event) => event.data,\r\n                    }),\r\n                  },\r\n                  onError: {\r\n                    target: \"inbox\",\r\n                    actions: assign({\r\n                      error: (context, event) =>\r\n                        \"there is problem fetching contacts\",\r\n                    }),\r\n                  },\r\n                },\r\n              },\r\n              deletingOutboxMessage: {\r\n                invoke: {\r\n                  src: deleteOutboxMessage,\r\n                  id: \"deleteOutboxMessage\",\r\n                  onDone: {\r\n                    target: \"outbox\",\r\n                    actions: assign({ outbox: (context, event) => event.data }),\r\n                  },\r\n                  onError: {\r\n                    target: \"outbox\",\r\n                    actions: assign({\r\n                      error: (context, event) =>\r\n                        \"there is problem 'deleting' outbox item\",\r\n                    }),\r\n                  },\r\n                },\r\n              },\r\n              markingMessage: {\r\n                invoke: {\r\n                  src: markMessage,\r\n                  id: \"markMessage\",\r\n                  onDone: {\r\n                    target: \"inbox\",\r\n                    actions: assign({\r\n                      messages: (context, event) => event.data,\r\n                    }),\r\n                  },\r\n                  onError: {\r\n                    target: \"inbox\",\r\n                    actions: assign({\r\n                      error: (context, event) =>\r\n                        \"there is problem setting message title\",\r\n                    }),\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            on: {\r\n              SWITCH_TO_OUTBOX: \".outbox\",\r\n              SWITCH_TO_INBOX: \".inbox\",\r\n              SWITCH_TO_CHAT: \".chat\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n\r\n      success: {},\r\n      fail: {},\r\n    },\r\n    // on: {\r\n    //   READ_MESSAGES: \".msgReadingStarted\",\r\n    // },\r\n  },\r\n  {\r\n    guards: {\r\n      addrLimit: (ctx, event) => ctx.addressees.length === 3,\r\n      addrEmpty: (ctx, event) => ctx.addressees.length === 1,\r\n      duplicatedAddr: (ctx, event) => ctx.addressees.includes(event.payload),\r\n    },\r\n    actions: {\r\n      delAddressee: assign({\r\n        addressees: (ctx, event) => {\r\n          console.log(\"delAddressee\");\r\n          console.dir(event);\r\n          return ctx.addressees.filter(\r\n            (addressee) => addressee !== event.payload\r\n          );\r\n        },\r\n      }),\r\n      addAddressee: assign({\r\n        addressees: (ctx, { payload }) => [...ctx.addressees, payload],\r\n      }),\r\n      sendMessage: assign({\r\n        messages: (ctx, event) => [\r\n          ...ctx.messages,\r\n          { body: ctx.msgInForm, objectId: ctx.msgInForm.slice(0, 5) },\r\n        ],\r\n      }),\r\n      clearMessage: assign({ addressees: [], msgInForm: \"\" }),\r\n      receiveTyping: assign({\r\n        msgInForm: (ctx, event) => event.payload,\r\n        clearBtnDis: false,\r\n      }),\r\n    },\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { Menu, Dropdown } from \"semantic-ui-react\";\r\n\r\nexport default function HomeBar() {\r\n  return (\r\n    <div>\r\n      <Menu style={{ height: \"3.2rem\" }} attached=\"top\" color=\"blue\" inverted>\r\n        <Dropdown item icon=\"list\"></Dropdown>\r\n        <Menu.Header\r\n          as=\"div\"\r\n          style={{\r\n            paddingTop: \"0.5em\",\r\n            fontSize: \"22px\",\r\n            color: \"#ccc\",\r\n            margin: \"0 auto\",\r\n          }}\r\n          content=\"Notify\"\r\n        ></Menu.Header>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Segment, Form, TextArea, Button, Icon } from \"semantic-ui-react\";\r\nimport { HomeMachineContext } from \"../state\";\r\n\r\nexport default function SenderSemui() {\r\n  const styles = {\r\n    adr_btn: {\r\n      padding: \".5rem 0rem 0.5rem 0.7rem\",\r\n      borderRadius: \"1rem\",\r\n      marginLeft: \"0.5rem\",\r\n      fontWeight: 600,\r\n    },\r\n  };\r\n  const [current, send] = React.useContext(HomeMachineContext);\r\n\r\n  const handleSend = (message) => {\r\n    console.log(message);\r\n    send({\r\n      type: \"SEND_MESSAGE\",\r\n      payload: message,\r\n    }); // {body: 'this is message', to: 'Pavel'}\r\n  };\r\n  const handleDelete = (addressee) =>\r\n    send({ type: \"DEL_ADDRESSEE\", payload: addressee });\r\n\r\n  const handleClear = async () => send(\"CLEAR_MESSAGE\");\r\n\r\n  const handleChange = (event) =>\r\n    send({ type: \"MESSAGE_DATA\", payload: event.target.value });\r\n\r\n  console.log(current.value);\r\n  console.log(current.context);\r\n  const addresseeButtons = (addressees) =>\r\n    addressees.map((addressee) => (\r\n      <Button\r\n        onClick={handleDelete.bind(null, addressee)}\r\n        style={styles.adr_btn}\r\n        key={addressee}\r\n        basic\r\n        size=\"tiny\"\r\n      >\r\n        {addressee}\r\n        &nbsp; &nbsp;\r\n        <Icon name=\"delete\"></Icon>\r\n      </Button>\r\n    ));\r\n  return (\r\n    <Segment>\r\n      <Segment basic textAlign=\"left\" style={{ padding: \"0px\" }}>\r\n        Send to:\r\n        {addresseeButtons(current.context.addressees)}\r\n      </Segment>\r\n      <Form>\r\n        <TextArea\r\n          rows={3}\r\n          placeholder=\"Compose your message\"\r\n          onChange={handleChange}\r\n          value={current.context.msgInForm}\r\n        />\r\n      </Form>\r\n      <Segment\r\n        as=\"div\"\r\n        basic\r\n        style={{ padding: \"0px\", display: \"flex\", justifyContent: \"right\" }}\r\n      >\r\n        <Button\r\n          active\r\n          className=\"btnsend\"\r\n          disabled={!current.context.msgInForm || !current.context.addressees}\r\n          onClick={handleSend.bind(null, {\r\n            body: current.context.msgInForm,\r\n            to: current.context.addressees,\r\n          })}\r\n          size=\"tiny\"\r\n          color=\"twitter\"\r\n        >\r\n          <Icon name=\"send\" />\r\n          Send\r\n        </Button>\r\n        <Button\r\n          disabled={current.context.clearBtnDis}\r\n          onClick={handleClear}\r\n          size=\"tiny\"\r\n          color=\"google plus\"\r\n        >\r\n          <Icon name=\"delete\" />\r\n          Clear\r\n        </Button>\r\n      </Segment>\r\n      {/* <pre style={{ textAlign: \"start\" }}>\r\n        {JSON.stringify(current.context, null, 2)}\r\n      </pre> */}\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Segment, List } from \"semantic-ui-react\";\r\nimport { HomeMachineContext } from \"../state\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\n\r\nexport default function ContactsSemui({ contacts }) {\r\n  return (\r\n    <Segment style={{ paddingRight: 5 }}>\r\n      <SimpleBar style={{ maxHeight: \"88vh\" }}>\r\n        <div\r\n          style={{\r\n            paddingLeft: \"2\",\r\n            paddingRight: \"7px\",\r\n            width: \"100%\",\r\n            display: \"block\",\r\n            // background: \"lightblue\",\r\n          }}\r\n        >\r\n          <List animated divided relaxed>\r\n            {contacts.map((contact) => (\r\n              <ListItem addressee={contact.username} key={contact.objectId} />\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </SimpleBar>\r\n    </Segment>\r\n  );\r\n}\r\nconst ListItem = ({ addressee }) => {\r\n  const toCamelCase = (str) =>\r\n    str\r\n      .split(/\\s*[\\s,]\\s*/)\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n  const styles = {\r\n    icon: {\r\n      paddingTop: \"0.2rem\",\r\n    },\r\n    item: {\r\n      color: \"black\",\r\n      textAlign: \"left\",\r\n    },\r\n  };\r\n  const [current, send] = React.useContext(HomeMachineContext);\r\n  const handleClick = (addressee) => {\r\n    send({ type: \"ADD_ADDRESSEE\", payload: addressee });\r\n  };\r\n  return (\r\n    <List.Item onClick={handleClick.bind(null, addressee)}>\r\n      <List.Icon\r\n        style={styles.icon}\r\n        name=\"user\"\r\n        size=\"small\"\r\n        color=\"grey\"\r\n      ></List.Icon>\r\n      <List.Content as=\"a\" style={styles.item}>\r\n        {toCamelCase(addressee)}\r\n      </List.Content>\r\n    </List.Item>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HomeMachineContext } from \"../state\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport { Segment, List, Icon, Checkbox } from \"semantic-ui-react\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport useSound from 'use-sound';\r\nimport dripSfx from '../../assets/drip-echo.wav';\r\n\r\nexport default function Inbox() {\r\n  console.log(\"*** Messenger rendered ***\");\r\n  const [current, send] = React.useContext(HomeMachineContext);\r\n\r\n  console.log(current.value); // state\r\n  console.log(current.context); // context of homeMachine\r\n\r\n  return (\r\n    <div>\r\n      <SimpleBar style={{ maxHeight: \"58.6vh\" }}>\r\n        <div\r\n          style={{\r\n            paddingRight: \"0px\",\r\n            margin: \"0px\",\r\n            width: \"100%\",\r\n            display: \"block\",\r\n            // background: \"red\",\r\n          }}\r\n        >\r\n          <List animated relaxed style={{ margin: 6 }}>\r\n            {current.context.messages.map((message) => (\r\n              <ListItem message={message} key={message.objectId} send={send} />\r\n            ))}\r\n          </List>\r\n          {console.log('assssssssssssssssssssssssssssssss')}\r\n        </div>\r\n      </SimpleBar>\r\n      {/*<p>{current.context.messages.length}</p>*/}\r\n      {/*<pre>{JSON.stringify(current.context.messages, null, 2)}</pre>*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListItem({ message, send }) {\r\n  const [play] = useSound(dripSfx);\r\n  const toCamelCase = (str) =>\r\n    str\r\n      .split(/\\s*[\\s,]\\s*/)\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n  const styles = {\r\n    flexContainer: {\r\n      display: \"flex\",\r\n      flexFlow: \"row\",\r\n      padding: \"0px 4px\",\r\n    },\r\n    flexConCol: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      textAlign: \"start\",\r\n    },\r\n    from: {\r\n      flex: 1,\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    body: {\r\n      flex: 1,\r\n      textAlign: \"start\",\r\n    },\r\n    time: {\r\n      color: \"#999\",\r\n      fontSize: \"0.8rem\",\r\n    },\r\n    buttons: {\r\n      // flexBasis: \"content\",\r\n      margin: \"auto\",\r\n    },\r\n    divider: {\r\n      borderLeft: \"1px solid #bbb\",\r\n      margin: \"5px 0px\",\r\n      marginLeft: \"6px\",\r\n      marginRight: \"6px\",\r\n    },\r\n  };\r\n  const handleDelete = (objectId) => {\r\n    console.log(\"delete $$$$$$$$$$$$$$$$$$$$$$$$\");\r\n    send({ type: \"DEL_INBOX_ITEM\", payload: objectId });\r\n  };\r\n  const markRead = (objectId) => {\r\n    console.log(\"mark read 6666666666666666666666666\");\r\n    send({ type: \"MARK_MESSAGE_READ\", payload: objectId });\r\n  };\r\n  function listItemOn(e) {\r\n    e.target.style.color = \"red\";\r\n  }\r\n  function listItemOff(e) {\r\n    e.target.style.color = \"grey\";\r\n  }\r\n\r\n  return (\r\n    <Segment\r\n      onClick={\r\n        !message.title?.includes(\"READ\")\r\n          ? markRead.bind(null, message.objectId)\r\n          : null\r\n      }\r\n      attached\r\n      className=\"listitem\"\r\n      style={styles.flexContainer}\r\n    >\r\n      <div style={styles.flexConCol}>\r\n        <div style={styles.from}>\r\n          <strong>from: {toCamelCase(message.from)}</strong>\r\n        </div>\r\n        <div style={styles.time}>{message.timestamp}</div>\r\n      </div>\r\n      <div style={styles.divider}></div>\r\n      <div style={styles.body}>\r\n        {message.title?.includes(\"READ\") ? (\r\n          message.body\r\n        ) : (\r\n          <strong>{message.body}</strong>\r\n        )}\r\n      </div>\r\n      <div style={styles.divider}></div>\r\n      <div style={styles.buttons}>\r\n        <Checkbox className=\"checkbox\"></Checkbox>\r\n      </div>\r\n      <div className=\"icon\">\r\n        <Icon\r\n          onMouseEnter={listItemOn}\r\n          onMouseOut={listItemOff}\r\n          onClick={handleDelete.bind(null, message.objectId)}\r\n          name=\"trash alternate\"\r\n        ></Icon>\r\n      </div>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HomeMachineContext } from \"../state\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport { Segment, List, Icon, Checkbox } from \"semantic-ui-react\";\r\n\r\nexport default function Outbox() {\r\n  console.log(\"*** Messenger rendered ***\");\r\n  const [current, send] = React.useContext(HomeMachineContext);\r\n\r\n  console.log(current.value); // state\r\n  console.log(current.context); // context of homeMachine\r\n\r\n  return (\r\n    <SimpleBar style={{ maxHeight: \"58.6vh\" }}>\r\n      <div\r\n        style={{\r\n          paddingRight: \"0px\",\r\n          margin: \"0px\",\r\n          width: \"100%\",\r\n          display: \"block\",\r\n          // background: \"red\",\r\n        }}\r\n      >\r\n        <List animated relaxed style={{ margin: 6 }}>\r\n          {current.context.outbox.map((message) => (\r\n            <ListItem message={message} key={message.objectId} send={send} />\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </SimpleBar>\r\n  );\r\n}\r\n\r\nfunction ListItem({ message, send }) {\r\n  const toCamelCase = (str) =>\r\n    str\r\n      .split(/\\s*[\\s,]\\s*/)\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n  const styles = {\r\n    flexContainer: {\r\n      display: \"flex\",\r\n      flexFlow: \"row\",\r\n      padding: \"0px 4px\",\r\n    },\r\n    flexConCol: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      textAlign: \"start\",\r\n    },\r\n    addressee: {\r\n      flex: 1,\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    body: {\r\n      flex: 1,\r\n      textAlign: \"start\",\r\n    },\r\n    time: {\r\n      color: \"#999\",\r\n      fontSize: \"0.8rem\",\r\n    },\r\n    buttons: {\r\n      // flexBasis: \"content\",\r\n      margin: \"auto\",\r\n    },\r\n    divider: {\r\n      borderLeft: \"1px solid #bbb\",\r\n      margin: \"5px 0px\",\r\n      marginLeft: \"6px\",\r\n      marginRight: \"6px\",\r\n    },\r\n  };\r\n  const handleDelete = async (objectId) => {\r\n    send({ type: \"DEL_OUTBOX_MESSAGE\", payload: objectId });\r\n    // this event means message 'title' on server should be set to 'DEL'\r\n    // and meessage should be removed from context.outbox array\r\n  };\r\n  function listItemOn(e) {\r\n    e.target.style.color = \"red\";\r\n  }\r\n  function listItemOff(e) {\r\n    e.target.style.color = \"grey\";\r\n  }\r\n  return (\r\n    <Segment className=\"listitem\" attached style={styles.flexContainer}>\r\n      <div style={styles.flexConCol}>\r\n        <div style={styles.addressee}>\r\n          <strong>to: {toCamelCase(message.to)}</strong>\r\n        </div>\r\n        <div style={styles.time}>{message.timestamp}</div>\r\n      </div>\r\n      <div style={styles.divider}></div>\r\n      <div style={styles.body}>{message.body}</div>\r\n      <div style={styles.divider}></div>\r\n      <div style={styles.buttons}>\r\n        <Checkbox className=\"checkbox\"></Checkbox>\r\n      </div>\r\n      <div className=\"icon\">\r\n        <Icon\r\n          onMouseEnter={listItemOn}\r\n          onMouseOut={listItemOff}\r\n          onClick={handleDelete.bind(null, message.objectId)}\r\n          name=\"trash alternate\"\r\n        ></Icon>\r\n      </div>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Tab, Segment } from \"semantic-ui-react\";\r\nimport Inbox from \"./Inbox\";\r\nimport Outbox from \"./Outbox\";\r\nimport { HomeMachineContext } from \"../state\";\r\n\r\nconst MessengerTabs = () => {\r\n  const [current, send] = React.useContext(HomeMachineContext);\r\n\r\n  /// this is reducer callback for counting sum of messages with 'READ' in title\r\n  const reducer = (acc, value) =>\r\n    value.title?.includes(\"READ\") ? acc : acc + 1;\r\n  const cntNewMessages = current.context.messages.reduce(reducer, 0);\r\n\r\n  /// sends message to machine to change current state of Messenger\r\n  const selectSwitch = [\r\n    \"SWITCH_TO_INBOX\",\r\n    \"SWITCH_TO_OUTBOX\",\r\n    \"SWITCH_TO_CHAT\",\r\n  ];\r\n  const handleTabChange = (event, data) => {\r\n    send(selectSwitch[data.activeIndex]);\r\n  };\r\n  const panes = [\r\n    {\r\n      menuItem: cntNewMessages !== 0 ? `Inbox (${cntNewMessages})` : \"Inbox\",\r\n      render: () => (\r\n        <Tab.Pane as=\"div\" style={{ padding: \"0px\" }}>\r\n          <Inbox />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Outbox\",\r\n      render: () => (\r\n        <Tab.Pane as=\"div\" style={{ padding: \"0px\" }}>\r\n          <Outbox />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Chat\",\r\n      render: () => (\r\n        <Tab.Pane attached={false}>Chat Content - To be done</Tab.Pane>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <Segment style={{ width: \"100%\", paddingRight: 5 }}>\r\n      <Tab\r\n        onTabChange={handleTabChange}\r\n        menu={{\r\n          secondary: true,\r\n          color: \"blue\",\r\n          pointing: true,\r\n        }}\r\n        panes={panes}\r\n      />\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default MessengerTabs;\r\n","import React from \"react\";\r\nimport { homeMachine, HomeMachineContext } from \"./state\";\r\nimport { useMachine } from \"@xstate/react\";\r\nimport HomeBar from \"./HomeBar\";\r\nimport \"./Home.css\";\r\nimport SenderSemui from \"./sender/SenderSemui\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nimport ContactsSemui from \"./contacts/ContactsSemui\";\r\nimport MessengerTabs from \"./messenger/MessengerTabs\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { start } from \"xstate/lib/actions\";\r\n\r\nconst styles = {\r\n  ul: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    textAlign: \"start\",\r\n    marginBlockStart: \"0em\",\r\n  },\r\n};\r\n\r\nexport default function Home({ user }) {\r\n  console.log(\"*** Home rendered ***\");\r\n  // console.log(user.username);\r\n  const machineWithContext = homeMachine.withContext({ user });\r\n  const [current, send] = useMachine(machineWithContext, { devTools: true });\r\n\r\n  console.log(current.value); // state\r\n  console.log(current.context); // context of homeMachine\r\n  console.log(current.event);\r\n\r\n  return (\r\n    <HomeMachineContext.Provider value={[current, send]}>\r\n      <React.Fragment>\r\n        <div className=\"layout\">\r\n          <HomeBar />\r\n          <div className=\"wrapper\">\r\n            <div className=\"contacts\">\r\n              <ContactsSemui contacts={current.context.allContacts} />\r\n            </div>\r\n            <div className=\"sender\">\r\n              <SenderSemui />\r\n            </div>\r\n            <div className=\"messenger\">\r\n              <MessengerTabs />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    </HomeMachineContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {},\r\n    paddingTop: 10\r\n  }\r\n}));\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n    </div>\r\n  );\r\n}","import React, { useContext } from \"react\";\r\nimport { useMachine } from \"@xstate/react\";\r\nimport { Redirect, Link as Rlink, useHistory } from \"react-router-dom\";\r\nimport logo from \"../assets/logo-bohnenkamp.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from \"clsx\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport { FormHelperText } from \"@material-ui/core\";\r\nimport LinearIndeterminate from \"../shared/LinearIndeterminate\";\r\nimport { MachineContext } from \"../state\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst indicatorStyle = {\r\n  color: \"red\",\r\n  textAlign: \"center\",\r\n  height: 20,\r\n  marginTop: 5,\r\n  marginBottom: \"auto\",\r\n};\r\n\r\nexport default function SignUp() {\r\n  //   console.log(\"***SignUp called***\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    username: \"\",\r\n    password: \"qwerty\",\r\n    email: \"test@test.com\",\r\n    sessionToken: \"\",\r\n    objectId: \"\",\r\n    signupError: \"\",\r\n  });\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const [isSignin, setSignin] = React.useState(true);\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [errors, setErrors] = React.useState({\r\n    // DEVELOPMENT setting to null from undifiend to enable prepopolated login\r\n    usernameError: null,\r\n    emailError: null,\r\n    passwordError: null,\r\n  });\r\n\r\n  // Tying machine by useContext\r\n  // alternatively useMachine can be use - what would be the difference?\r\n  // oh! it happnes that useMachine resets the xstate\r\n  const [machine, sendToMachine] = React.useContext(MachineContext);\r\n  const { error } = machine.context;\r\n  const isMatch = [\"auth.success\", \"home.idle\"].some(machine.matches);\r\n  console.log(machine.value);\r\n  // console.log(machine.context);\r\n  // console.log(machine.actions);\r\n\r\n  // interchangable view component\r\n  // show is same size box either loading indicator or error message\r\n  const LoadingOrError = (props) => {\r\n    if (props.isLoading) {\r\n      return <LinearIndeterminate />;\r\n    } else if (props.signupError !== \"\") {\r\n      return <div>{props.signupError}</div>;\r\n    }\r\n    return <div></div>;\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    setSignin(!isSignin);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { username, email, password } = values;\r\n    console.log(\"handleSubmit\");\r\n    if (isSignin) sendToMachine(\"LOGIN\", { email, password });\r\n    else sendToMachine(\"SIGNUP\", { username, email, password });\r\n    setLoading(true);\r\n  };\r\n\r\n  //TODO\r\n  const signUpCallBack = (result) => {\r\n    if (typeof result == \"string\") {\r\n      setValues({ ...values, signupError: result });\r\n    } else {\r\n      const { username, email, sessionToken, objectId } = result;\r\n      console.log(\"call back result: \" + username + \" \" + sessionToken);\r\n      setValues({\r\n        ...values,\r\n        username: username,\r\n        email: email,\r\n        sessionToken: sessionToken,\r\n        objectId: objectId,\r\n      });\r\n      setLoading(false);\r\n      //!   navigateTo(\"HOME\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    if (prop === \"username\") {\r\n      validateUsername(event.target.value);\r\n    } else if (prop === \"email\") {\r\n      validateEmail(event.target.value);\r\n    } else if (prop === \"password\") {\r\n      validatePassword(event.target.value);\r\n    }\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const validateUsername = (username) => {\r\n    if (username.length > 0 && username.length < 3) {\r\n      setErrors({ ...errors, usernameError: \"Username too short\" });\r\n    } else if (username.length === 0) {\r\n      setErrors({ ...errors, usernameError: \"\" });\r\n    } else {\r\n      setErrors({ ...errors, usernameError: null });\r\n    }\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    if (email.length > 3 && !email.includes(\"@\")) {\r\n      setErrors({ ...errors, emailError: \"Not valid email address\" });\r\n    } else if (email.length === 0) {\r\n      setErrors({ ...errors, emailError: \"\" });\r\n    } else {\r\n      setErrors({ ...errors, emailError: null });\r\n    }\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    if (password.length > 0 && password.length < 6) {\r\n      setErrors({ ...errors, passwordError: \"Password too short\" });\r\n    } else if (password.length === 0) {\r\n      setErrors({ ...errors, passwordError: \"\" });\r\n    } else {\r\n      setErrors({ ...errors, passwordError: null });\r\n    }\r\n  };\r\n\r\n  //! Global Context Pulls\r\n  //   const { user } = useContext(GlobalContext);\r\n  //   console.log(user);\r\n  //   const { signUpSubmitted, navigateTo } = useContext(GlobalContext);\r\n\r\n  console.log(\"SignUp rendered!\");\r\n  // console.log(machine);\r\n  // machine.value?.auth?.home === \"homeidle\" && history.push(\"/home\");\r\n  let history = useHistory();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <img src={logo} style={{ width: 200 }} alt=\"logotip\"></img>\r\n        <div style={{ height: 20 }}></div>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {isSignin ? \"Sign in\" : \"Create your account\"}\r\n        </Typography>\r\n\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            {isSignin ? (\r\n              <div></div>\r\n            ) : (\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  error={!!errors.usernameError}\r\n                  fullWidth\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"username\"\r\n                    value={values.username}\r\n                    onChange={handleChange(\"username\")}\r\n                    labelWidth={73}\r\n                  />\r\n                  <FormHelperText>{errors.usernameError}</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                id=\"f-email\"\r\n                focused={values.isEmailFocus}\r\n                error={!!errors.emailError}\r\n                fullWidth\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\"\r\n              >\r\n                <InputLabel htmlFor=\"username\">Email</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  labelWidth={42}\r\n                />\r\n                <FormHelperText>{errors.emailError}</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={!!errors.passwordError}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                className={clsx(classes.margin, classes.textField)}\r\n              >\r\n                <InputLabel htmlFor=\"passwordas\">Password</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={values.password}\r\n                  onChange={handleChange(\"password\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n                <FormHelperText>{errors.passwordError}</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div style={indicatorStyle}>\r\n                <LoadingOrError\r\n                  isLoading={machine.matches(\"auth.started\")}\r\n                  signupError={machine.context.error?.toString()}\r\n                />\r\n                {machine.matches(\"auth.home.homeidle\") && (\r\n                  <Redirect to=\"/\"></Redirect>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            disabled={\r\n              !(\r\n                errors.usernameError === null &&\r\n                errors.emailError === null &&\r\n                errors.passwordError === null\r\n              )\r\n            }\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {isSignin ? \"Sign In\" : \"Sign Up\"}\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              {isSignin ? (\r\n                <Link onClick={toggleMode} href=\"#\" variant=\"body2\">\r\n                  Don't have an account? Sign up\r\n                </Link>\r\n              ) : (\r\n                <Link onClick={toggleMode} href=\"#\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MachineContext } from \"../state\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const userRef = React.useRef();\r\n  const passRef = React.useRef();\r\n  const [machine, sendToMachine] = React.useContext(MachineContext);\r\n  const { error } = machine.context;\r\n  const doLogin = () => {\r\n    const username = userRef.current.value;\r\n    const password = passRef.current.value;\r\n    sendToMachine(\"LOGIN\", { username, password });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Login to your account</h1>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"username\" ref={userRef}></input>\r\n      </div>\r\n      <div>\r\n        <input type=\"password\" placeholder=\"password\" ref={passRef}></input>\r\n      </div>\r\n      {machine.matches(\"auth.fail\") && <div>{error.toString()}</div>}\r\n      <div>\r\n        <button onClick={doLogin}>Login</button>\r\n      </div>\r\n      <div>{machine.matches(\"auth.success\") && <Redirect to=\"/Home\" />}</div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nexport default function PrivateRoute({ children, machine, ...rest }) {\r\n  const { user } = machine.context;\r\n  console.log(\"PrivateRoute() User: \");\r\n  console.log(user);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        user !== undefined ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"../home/Home\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { MachineContext } from \"../state\";\r\nimport SignUp from \"../login/SignUp\";\r\nimport Login from \"../login/login\";\r\nimport PrivateRoute from \"../privateroute\";\r\n\r\nfunction App() {\r\n  const [currentMachine, sendToMachine] = React.useContext(MachineContext);\r\n  console.log(\"App rendered ==============\");\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/login\" component={SignUp} />\r\n          {/* <Route path=\"/\">\r\n            <Home\r\n            user={{\r\n              username: \"Aleksej Lobikov\",\r\n              email: \"aleksej.lobikov@gmail.com\",\r\n              objectId: \"aweRt1dr\",\r\n            }}\r\n            />\r\n          </Route> */}\r\n          <Route path=\"/about\" component={Login} />\r\n          <PrivateRoute machine={currentMachine} path=\"/\">\r\n            <Home user={currentMachine.context.user} />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { useMachine } from \"@xstate/react\";\r\nimport appMachine, { MachineContext } from \"../state\";\r\nimport App from \"./App\";\r\n\r\nexport default function App1() {\r\n  console.log(\"App1 rendered -----------------\");\r\n  const [currentMachine, sendToMachine] = useMachine(appMachine, {\r\n    devTools: true,\r\n  });\r\n  return (\r\n    <MachineContext.Provider value={[currentMachine, sendToMachine]}>\r\n      <App />\r\n    </MachineContext.Provider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App1 from \"./components/app/App1\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <App1 />,\r\n  // </React.StrictMode>\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/drip-echo.ec5aa5ba.wav\";","module.exports = __webpack_public_path__ + \"static/media/logo-bohnenkamp.ae1aeca0.svg\";"],"sourceRoot":""}